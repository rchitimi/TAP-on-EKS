// installing EKS using eksctl (on Mac)

// install Kubectl

curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/darwin/amd64/kubectl

//install eksctl 

brew tap weaveworks/tap
brew install weaveworks/tap/eksctl

//create k8s cluster

eksctl create cluster --name eks-tap-demo --region us-east-1 


(Default is 2 nodes only: to scale run 
eksctl get nodegroup --cluster=eks-tap-demo -r us-east-1
eksctl scale nodegroup --cluster=eks-tap-demo -r us-east-1 --nodes=6 --name=ng-55c39af3 --nodes-min=6  --nodes-max=10
)


//download and install Tanzu cluster essentials and tap

tar -xvf ~/Downloads/tanzu-cluster-essentials-darwin-amd64-1.0.0.tgz -C $HOME/tap/tanzu-cluster-essentials
export INSTALL_BUNDLE=registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:82dfaf70656b54dcba0d4def85ccae1578ff27054e7533d08320244af7fb0343
export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com
export INSTALL_REGISTRY_USERNAME=TANZU-NET-USER
export INSTALL_REGISTRY_PASSWORD=TANZU-NET-PASSWORD
./install.sh

tar -xvf ~/Downloads/tanzu-framework-darwin-amd64.tar -C $HOME/tanzu
export TANZU_CLI_NO_INIT=true

tar -xvf ~/Downloads/tanzu-framework-darwin-amd64-1.tar -C $HOME/tanzu 
export TANZU_CLI_NO_INIT=true

tanzu plugin list
tanzu version


//install tap
kubectl create ns tap-install

tanzu secret registry add tap-registry \
  --username ${INSTALL_REGISTRY_USERNAME} --password ${INSTALL_REGISTRY_PASSWORD} \
  --server ${INSTALL_REGISTRY_HOSTNAME} \
  --export-to-all-namespaces --yes --namespace tap-install

tanzu package repository add tanzu-tap-repository \
  --url registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:0.4.0 \
  --namespace tap-install


tanzu package repository add tanzu-tap-repository --url registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:1.0.0 --namespace tap-install 
tanzu package repository get tanzu-tap-repository --namespace tap-install
tanzu package available list --namespace tap-install

(//for ECR
aws ecr create-repository \
    --repository-name build-service \
    --image-scanning-configuration scanOnPush=true \
    --region us-east-1

aws ecr create-repository \                  
    --repository-name supply-chain \ 
    --image-scanning-configuration scanOnPush=true \
    --region us-east-1
)

(//install harbor using helm)


kubectl get pods -A 
tanzu package installed list -A

alias kc=kubectl

vi tap-values.yml (setup configuration…)
tanzu package installed update tap --package-name tap.tanzu.vmware.com --version 1.0.0 --values-file tap-values.yml -n tap-install

//setup DNS
kubectl get service envoy -n tanzu-system-ingress

//create blank catalog for tap-gui
git remote add origin https://github.com/rchitimi/tanzu.git

//deploy workload
kc create ns developer

tanzu secret registry add registry-credentials --server harbor.tap.mytanzudemos.com --username admin --password “xxxxxxxx” --namespace developer

cat <<EOF | kubectl -n developer apply -f -                                                           
apiVersion: v1
kind: Secret                           
metadata:                     
  name: tap-registry
  annotations:                             
    secretgen.carvel.dev/image-pull-secret: ""
type: kubernetes.io/dockerconfigjson
data:                   
  .dockerconfigjson: e30K             
---           
apiVersion: v1         
kind: ServiceAccount 
metadata:     
  name: default                                 
secrets:                 
  - name: registry-credentials
imagePullSecrets:
  - name: registry-credentials
  - name: tap-registry
---              
apiVersion: rbac.authorization.k8s.io/v1
kind: Role       
metadata:                
  name: default                      
rules:        
- apiGroups: [source.toolkit.fluxcd.io]
  resources: [gitrepositories]
  verbs: ['*']   
- apiGroups: [source.apps.tanzu.vmware.com]
  resources: [imagerepositories]
  verbs: ['*']
- apiGroups: [carto.run]          
  resources: [deliverables, runnables]
  verbs: ['*']
- apiGroups: [kpack.io]         
  resources: [images]           
  verbs: ['*']
- apiGroups: [conventions.apps.tanzu.vmware.com]
  resources: [podintents]      
  verbs: ['*']
- apiGroups: [""]                            
  resources: ['configmaps']               
  verbs: ['*']
- apiGroups: [""]
  resources: ['pods']                   
  verbs: ['list']
- apiGroups: [tekton.dev]
  resources: [taskruns, pipelineruns]
  verbs: ['*']
- apiGroups: [tekton.dev]            
  resources: [pipelines]
  verbs: ['list']
- apiGroups: [kappctrl.k14s.io]
  resources: [apps]     
  verbs: ['*']   
- apiGroups: [serving.knative.dev]                    


tanzu apps workload create tanzu-java-web-app \                                 
--git-repo https://github.com/rchitimi/tanzu-java-web-app.git \
--git-branch main \
--type web \
--label app.kubernetes.io/part-of=tanzu-java-web-app \
--yes -n developer


tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp -n developer 
tanzu apps workload get tanzu-java-web-app -n developer


