{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww22740\viewh14280\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // installing EKS using eksctl 
\f1\fs22 \cf2 \CocoaLigature0 (on Mac)
\f0\fs24 \cf0 \CocoaLigature1 \
\
// install Kubectl\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \CocoaLigature0 curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/darwin/amd64/kubectl\
\
//install eksctl \
\
brew tap weaveworks/tap\
brew install weaveworks/tap/eksctl\
\
//create k8s cluster\
\
eksctl create cluster --name eks-tap-demo --region us-east-1 \
\
\
(Default is 2 nodes only: to scale run \
eksctl get nodegroup --cluster=eks-tap-demo -r us-east-1\
eksctl scale nodegroup --cluster=eks-tap-demo -r us-east-1 --nodes=6 --name=ng-55c39af3 --nodes-min=6  --nodes-max=10\
)\
\
//if using ECR , AWS registry\
\
\
//download and install Tanzu cluster essentials and tap\
\
tar -xvf ~/Downloads/tanzu-cluster-essentials-darwin-amd64-1.0.0.tgz -C $HOME/tap/tanzu-cluster-essentials\
export INSTALL_BUNDLE=registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:82dfaf70656b54dcba0d4def85ccae1578ff27054e7533d08320244af7fb0343\
export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com\
export INSTALL_REGISTRY_USERNAME=TANZU-NET-USER\
export INSTALL_REGISTRY_PASSWORD=TANZU-NET-PASSWORD\
./install.sh\
\
tar -xvf ~/Downloads/tanzu-framework-darwin-amd64.tar -C $HOME/tanzu\
export TANZU_CLI_NO_INIT=true\
\
tar -xvf ~/Downloads/tanzu-framework-darwin-amd64-1.tar -C $HOME/tanzu \
export TANZU_CLI_NO_INIT=true\
\
tanzu plugin list\
tanzu version\
\
\
\
kubectl create ns tap-install\
\
tanzu secret registry add tap-registry \\\
  --username $\{INSTALL_REGISTRY_USERNAME\} --password $\{INSTALL_REGISTRY_PASSWORD\} \\\
  --server $\{INSTALL_REGISTRY_HOSTNAME\} \\\
  --export-to-all-namespaces --yes --namespace tap-install\
\
tanzu package repository add tanzu-tap-repository \\\
  --url registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:0.4.0 \\\
  --namespace tap-install\
\
\
tanzu package repository add tanzu-tap-repository --url registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:1.0.0 --namespace tap-install \
\
tanzu package repository get tanzu-tap-repository --namespace tap-install\
\
tanzu package available list --namespace tap-install\
\
(//for ECR\
aws ecr create-repository \\\
    --repository-name build-service \\\
    --image-scanning-configuration scanOnPush=true \\\
    --region us-east-1\
\
aws ecr create-repository \\                  \
    --repository-name supply-chain \\ \
    --image-scanning-configuration scanOnPush=true \\\
    --region us-east-1\
)\
\
(//install harbor using helm)\
\
\
kubectl get pods -A \
tanzu package installed list -A\
\
alias kc=kubectl\
\
vi tap-values.yml (setup configuration\'85)\
tanzu package installed update tap --package-name tap.tanzu.vmware.com --version 1.0.0 --values-file tap-values.yml -n tap-install\
\
//setup DNS\
kubectl get service envoy -n tanzu-system-ingress\
\
\
//create blank catalog for tap-gui\
git remote add origin https://github.com/rchitimi/tanzu.git\
\
//deploy workload\
kc create ns developer\
\
tanzu secret registry add registry-credentials --server harbor.tap.mytanzudemos.com --username admin --password \'93xxxxxxxx\'94 --namespace developer\
\
cat <<EOF | kubectl -n developer apply -f -                                                           \
apiVersion: v1\
kind: Secret                           \
metadata:                     \
  name: tap-registry\
  annotations:                             \
    secretgen.carvel.dev/image-pull-secret: ""\
type: kubernetes.io/dockerconfigjson\
data:                   \
  .dockerconfigjson: e30K             \
---           \
apiVersion: v1         \
kind: ServiceAccount \
metadata:     \
  name: default                                 \
secrets:                 \
  - name: registry-credentials\
imagePullSecrets:\
  - name: registry-credentials\
  - name: tap-registry\
---              \
apiVersion: rbac.authorization.k8s.io/v1\
kind: Role       \
metadata:                \
  name: default                      \
rules:        \
- apiGroups: [source.toolkit.fluxcd.io]\
  resources: [gitrepositories]\
  verbs: ['*']   \
- apiGroups: [source.apps.tanzu.vmware.com]\
  resources: [imagerepositories]\
  verbs: ['*']\
- apiGroups: [carto.run]          \
  resources: [deliverables, runnables]\
  verbs: ['*']\
- apiGroups: [kpack.io]         \
  resources: [images]           \
  verbs: ['*']\
- apiGroups: [conventions.apps.tanzu.vmware.com]\
  resources: [podintents]      \
  verbs: ['*']\
- apiGroups: [""]                            \
  resources: ['configmaps']               \
  verbs: ['*']\
- apiGroups: [""]\
  resources: ['pods']                   \
  verbs: ['list']\
- apiGroups: [tekton.dev]\
  resources: [taskruns, pipelineruns]\
  verbs: ['*']\
- apiGroups: [tekton.dev]            \
  resources: [pipelines]\
  verbs: ['list']\
- apiGroups: [kappctrl.k14s.io]\
  resources: [apps]     \
  verbs: ['*']   \
- apiGroups: [serving.knative.dev]                    \
\
\
tanzu apps workload create tanzu-java-web-app \\                                 \
--git-repo https://github.com/rchitimi/tanzu-java-web-app.git \\\
--git-branch main \\\
--type web \\\
--label app.kubernetes.io/part-of=tanzu-java-web-app \\\
--yes -n developer\
\
\
tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp -n developer \
tanzu apps workload get tanzu-java-web-app -n developer\
\
\
}